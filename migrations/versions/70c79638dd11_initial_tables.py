"""Initial tables

Revision ID: 70c79638dd11
Revises: 
Create Date: 2020-12-05 17:54:19.870774

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '70c79638dd11'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Cities_name'), 'Cities', ['name'], unique=False)
    op.create_table('Officials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Officials_name'), 'Officials', ['name'], unique=False)
    op.create_table('Teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Teams_name'), 'Teams', ['name'], unique=True)
    op.create_table('Players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['Teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Players_name'), 'Players', ['name'], unique=False)
    op.create_table('Venues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['Cities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Venues_name'), 'Venues', ['name'], unique=False)
    op.create_table('Matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.Integer(), nullable=True),
    sa.Column('venue', sa.Integer(), nullable=True),
    sa.Column('umpire1', sa.Integer(), nullable=True),
    sa.Column('umpire2', sa.Integer(), nullable=True),
    sa.Column('team1', sa.Integer(), nullable=True),
    sa.Column('team2', sa.Integer(), nullable=True),
    sa.Column('toss_winner', sa.Integer(), nullable=True),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.Column('player_of_match', sa.String(length=100), nullable=True),
    sa.Column('toss_decision', sa.String(length=10), nullable=True),
    sa.Column('result', sa.String(length=10), nullable=True),
    sa.Column('win_by_runs', sa.Integer(), nullable=True),
    sa.Column('win_by_wickets', sa.Integer(), nullable=True),
    sa.Column('season', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('dl_applied', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['city'], ['Cities.id'], ),
    sa.ForeignKeyConstraint(['team1'], ['Teams.id'], ),
    sa.ForeignKeyConstraint(['team2'], ['Teams.id'], ),
    sa.ForeignKeyConstraint(['toss_winner'], ['Teams.id'], ),
    sa.ForeignKeyConstraint(['umpire1'], ['Officials.id'], ),
    sa.ForeignKeyConstraint(['umpire2'], ['Officials.id'], ),
    sa.ForeignKeyConstraint(['venue'], ['Venues.id'], ),
    sa.ForeignKeyConstraint(['winner'], ['Teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Matches_dl_applied'), 'Matches', ['dl_applied'], unique=False)
    op.create_index(op.f('ix_Matches_player_of_match'), 'Matches', ['player_of_match'], unique=False)
    op.create_index(op.f('ix_Matches_result'), 'Matches', ['result'], unique=False)
    op.create_index(op.f('ix_Matches_season'), 'Matches', ['season'], unique=False)
    op.create_index(op.f('ix_Matches_toss_decision'), 'Matches', ['toss_decision'], unique=False)
    op.create_index(op.f('ix_Matches_win_by_runs'), 'Matches', ['win_by_runs'], unique=False)
    op.create_index(op.f('ix_Matches_win_by_wickets'), 'Matches', ['win_by_wickets'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index(op.f('ix_Matches_win_by_wickets'), table_name='Matches')
    # op.drop_index(op.f('ix_Matches_win_by_runs'), table_name='Matches')
    # op.drop_index(op.f('ix_Matches_toss_decision'), table_name='Matches')
    # op.drop_index(op.f('ix_Matches_season'), table_name='Matches')
    # op.drop_index(op.f('ix_Matches_result'), table_name='Matches')
    # op.drop_index(op.f('ix_Matches_player_of_match'), table_name='Matches')
    # op.drop_index(op.f('ix_Matches_dl_applied'), table_name='Matches')
    op.drop_table('Matches')
    op.drop_index(op.f('ix_Venues_name'), table_name='Venues')
    op.drop_table('Venues')
    op.drop_index(op.f('ix_Players_name'), table_name='Players')
    op.drop_table('Players')
    op.drop_index(op.f('ix_Teams_name'), table_name='Teams')
    op.drop_table('Teams')
    op.drop_index(op.f('ix_Officials_name'), table_name='Officials')
    op.drop_table('Officials')
    op.drop_index(op.f('ix_Cities_name'), table_name='Cities')
    op.drop_table('Cities')
    # ### end Alembic commands ###
